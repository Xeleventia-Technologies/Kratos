@namespace Kratos.Api.Components

<!DOCTYPE html>
<html>

<head>
  <title>Sign in with Google</title>
  <script src="https://accounts.google.com/gsi/client" async defer></script>
</head>

<body>
  <div id="g_id_onload" data-client_id="613291692381-mk9vs8415bc988l2vd0pfn5qcrknf4mv.apps.googleusercontent.com"
    data-callback="handleCredentialResponse" data-auto_prompt="false">
  </div>

  <div class="g_id_signin" data-type="standard" data-size="large" data-theme="outline" data-text="sign_in_with"
    data-shape="rectangular" data-logo_alignment="left">
  </div>

  <br><br>
  <button type="button" onclick="refreshTokens()">Refresh</button>

  <script>
    let accessToken = "";
    let refreshToken = "";
    let sessionId = "";

    async function handleCredentialResponse(googleResponse)
    {
      const googleToken = googleResponse.credential;

      let response = await fetch('https://localhost:5000/auth/google', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ googleToken })
      });

      let json = await response.json();

      accessToken = json.accessToken;
      refreshToken = json.refreshToken;
      sessionId = json.sessionId;
    }

    async function refreshTokens()
    {
      let response = await fetch("/auth/refresh-tokens", {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${accessToken}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ refreshToken, sessionId })
      });

      let json = await response.json();

      accessToken = json.accessToken;
      refreshToken = json.refreshToken;
    }
  </script>
</body>

</html>